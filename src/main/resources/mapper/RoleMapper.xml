<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faishze.api.fasizheapi.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.faishze.api.fasizheapi.pojo.do0.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="available" jdbcType="BIT" property="available"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="BaseColumnList">
        id, name, available, create_time, update_time
    </sql>

    <sql id="BaseTable">
        t_role
    </sql>

    <sql id="BaseAlisaTable">
        t_role role
    </sql>

    <sql id="SqlForTRoleJoinTUserRoleJoinTUser">
        t_role role
        join
        t_user_role user_role on role.id = user_role.role_id
        join
        t_user user on user_role.user_id = user.id
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.faishze.api.fasizheapi.pojo.do0.Role">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_role (`name`, available, create_time,
        update_time)
        values (#{name,jdbcType=VARCHAR}, #{available,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.faishze.api.fasizheapi.pojo.do0.Role">
    update t_role
    set `name` = #{name,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
   </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `name`, available, create_time, update_time
    from t_role
    where id = #{id,jdbcType=INTEGER}
   </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, available, create_time, update_time
    from t_role
    </select>

    <select id="listRoleNamesByUsername" resultType="java.lang.String">
        select role.name
        from
        <include refid="SqlForTRoleJoinTUserRoleJoinTUser"/>
        where
        user.username = #{username} and role.available = 1
    </select>
    <select id="listRolesByUsername" resultMap="BaseResultMap">
        select
        role.id, role.name, role.available, role.create_time, role.update_time
        from
        <include refid="SqlForTRoleJoinTUserRoleJoinTUser"/>
        where
        user.username = #{username} and role.available = 1
    </select>
</mapper>