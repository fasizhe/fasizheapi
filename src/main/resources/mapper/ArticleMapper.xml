<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faishze.api.fasizheapi.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.faishze.api.fasizheapi.pojo.do0.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type"/>
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="collection_num" jdbcType="INTEGER" property="collectionNum" />
    <result column="view_num" jdbcType="BIGINT" property="viewNum" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteArticle" parameterType="java.lang.Integer">
    delete from t_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="saveArticle" parameterType="com.faishze.api.fasizheapi.pojo.do0.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article (user_id, title, `type`, 
      like_num, collection_num, view_num, 
      comment_num, available, create_time, 
      update_time, content)
    values (#{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER},
      #{likeNum,jdbcType=INTEGER}, #{collectionNum,jdbcType=INTEGER}, #{viewNum,jdbcType=BIGINT}, 
      #{commentNum,jdbcType=INTEGER}, #{available,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateArticle" parameterType="com.faishze.api.fasizheapi.pojo.do0.Article">
    update t_article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      like_num = #{likeNum,jdbcType=INTEGER},
      collection_num = #{collectionNum,jdbcType=INTEGER},
      view_num = #{viewNum,jdbcType=BIGINT},
      comment_num = #{commentNum,jdbcType=INTEGER},
      available = #{available,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getArticle" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, title, `type`, like_num, collection_num, view_num, comment_num, 
    available, create_time, update_time, content
    from t_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="listArticles" resultMap="BaseResultMap">

  </select>
  <select id="listArticlesByQuery" parameterType="com.faishze.api.fasizheapi.dao.query.ArticleQuery" resultMap="BaseResultMap">
    select id, user_id, title, `type`, like_num, collection_num, view_num, comment_num,
    available, create_time, update_time, content
    from t_article
    <where>
        <if test="available != null">
            available = #{available}
        </if>
        <if test="userId != null">
            AND user_id = #{userId}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
    </where>
    <if test="orderField != null">
        order by ${orderField} ${orderType}
    </if>
  </select>
</mapper>