<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.faishze.api.fasizheapi.dao.TArticleCommentReplyMapper" >
  <resultMap id="BaseResultMap" type="com.faishze.api.fasizheapi.pojo.do0.TArticleCommentReply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="reply_user_id" property="replyUserId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_article_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.faishze.api.fasizheapi.pojo.do0.TArticleCommentReply" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article_comment_reply (user_id, article_id, comment_id, 
      reply_user_id, content, like_num, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{commentId,jdbcType=BIGINT}, 
      #{replyUserId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{likeNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.faishze.api.fasizheapi.pojo.do0.TArticleCommentReply" >
    update t_article_comment_reply
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=BIGINT},
      reply_user_id = #{replyUserId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, user_id, article_id, comment_id, reply_user_id, content, like_num, create_time, 
    update_time
    from t_article_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, user_id, article_id, comment_id, reply_user_id, content, like_num, create_time, 
    update_time
    from t_article_comment_reply
  </select>
</mapper>