<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.faishze.api.fasizheapi.dao.ArticleCommentReplyMapper">
  <resultMap id="BaseResultMap" type="com.faishze.api.fasizheapi.pojo.do0.ArticleCommentReply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="reply_user_id" jdbcType="INTEGER" property="replyUserId" />
    <result column="reply_user_nick_name" jdbcType="VARCHAR" property="replyUserNickName" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteArticleCommentReply" parameterType="java.lang.Long">
    delete from t_article_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="saveArticleCommentReply" parameterType="com.faishze.api.fasizheapi.pojo.do0.ArticleCommentReply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_article_comment_reply (user_id, user_nick_name, article_id, comment_id,
      reply_user_id, reply_user_nick_name,content, like_num
    values (#{userId,jdbcType=INTEGER}, #{userNickName,jdbcType=VARCHAR}, #{articleId,jdbcType=INTEGER},
    #{commentId,jdbcType=BIGINT},
      #{replyUserId,jdbcType=INTEGER}, #{replyUserNickName,jdbcType=VARCHAR},
      #{content,jdbcType=VARCHAR}, #{likeNum,jdbcType=INTEGER})
  </insert>
  <update id="updateArticleCommentReply" parameterType="com.faishze.api.fasizheapi.pojo.do0.ArticleCommentReply">
    update t_article_comment_reply
    set user_id = #{userId,jdbcType=INTEGER},
      user_nick_name=#{userNickName,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=INTEGER},
      comment_id = #{commentId,jdbcType=BIGINT},
      reply_user_id = #{replyUserId,jdbcType=INTEGER},
      reply_user_nick_name=#{replyUserNickName,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER}}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getArticleCommentReply" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, user_nick_name, article_id, comment_id, reply_user_id,
    reply_user_nick_name,content, like_num, create_time,
    update_time
    from t_article_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="listArticleCommentReplys" resultMap="BaseResultMap">
    select id, user_id, user_nick_name, article_id, comment_id, reply_user_id, reply_user_nick_name,
    content,
    like_num, create_time,
    update_time
    from t_article_comment_reply
  </select>
  <select id="listArticleCommentReplysByQuery"
          resultType="com.faishze.api.fasizheapi.pojo.do0.ArticleCommentReply">
    select id, user_id, user_nick_name, article_id, comment_id, reply_user_id, reply_user_nick_name,
    content,
    like_num, create_time,
    update_time
    from t_article_comment_reply
    <where>
      <if test="userId != null">
        AND user_id = #{userId}
      </if>
      <if test="userNickName != null">
        AND user_nick_name = #{userNickName}
      </if>
      <if test="articleId != null">
        article_id = #{articleId}
      </if>
      <if test="commentId != null">
        comment_id = #{commentId}
      </if>
    </where>
    <if test="orderField != null">
      order by ${orderField} ${orderType}
    </if>
  </select>
</mapper>